@import './style_variables.scss';
@import './styles_ndbx_override.scss';

@font-face {
  font-family: $heading-font;
  src: url(./assets/fonts/FreightDispProBlack-Regular.otf) format("opentype");
}

@font-face {
  font-family: $heading-font-bold;
  src: url(./assets/fonts/FreightDispProBold-Regular.otf) format("opentype");
}

@font-face {
  font-family: $base-font;
  src: url(./assets/fonts/Apercu_Regular.otf) format("opentype");
}

@font-face {
  font-family: $base-font-bold;
  src: url(./assets/fonts/Apercu_Bold.otf) format("opentype");
}

/*
 *
 * Please define styles with a mobile-first approach.
 * Default style should cover `tiny` breakpoint, as defined in
 * https://api-test.allianz.com/ngx-ndbx-next/documentation/grid
 *
 */


/*
 *
 * Default styles for global elements
 * h2 : Page title
 * p : normal paragraph
 *
 * As per normalize.css 1rem = 10px
 *
 */
html {
  font-family: $base-font !important;
}

html, body {
  display: block;
  margin: 0;
  padding: 0;
  overflow: hidden;
  width: 100%;
}

* {
  box-sizing: border-box;
}

h1, h2, h3, p, li {
  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: break-word;
  hyphens: auto;
}

h1 {
  font-family: $heading-font !important;
  font-size: 3.6rem;
  line-height: 1.02;
  margin-bottom: 2rem;

  @media only screen and (min-width: $tablet-breakpoint) {
    font-size: 4.8rem;
    line-height: 1.04;
  }
}

h2 {
  font-family: $heading-font !important;
  font-size: 2.6rem;
  line-height: 1.11;
  margin-bottom: 2rem;
  @media screen and (min-width: $tablet-breakpoint) {
    font-size: 3.6rem;
    line-height: 1.02;
  }
}

h3 {
  font-family: $heading-font-bold !important;
  font-size: 2rem;
  line-height: 1.1;
  margin-bottom: 4rem;

  @media screen and (min-width: $tablet-breakpoint) {
    font-size: 3rem;
    line-height: 1.06;
  }
}

h4 {
  font-size: 1.2rem;
  line-height: 1.5;
  letter-spacing: 0.25em;
  text-transform: uppercase;
  font-weight: 600; // TODO change it as soon as we have the right webfont
}


p {
  color: $body-black;
  font-size: 1.6rem;
  line-height: 1.43;
  margin: 0 0 2rem 0;

  &:last-child:not(&:only-child) {
    margin-bottom: 0;
  }

  &:empty {
    display: none;
  }

  &.body-small {
    font-size: 1.3rem;
    line-height: 1.46;
  }

  strong {
    font-family: $base-font-bold !important;
    font-weight: normal;
  }
}

ul, ol {
  list-style-position: outside;
  margin: 0 0 20px 0;
}

ul:last-child, ol:last-child {
  margin-bottom: 0;
}

ul li,
ol li {
  font-size: 1.5rem;
  line-height: normal;
  margin-left: 16px;
  padding-bottom: 2rem;
}

a {
  color: $primary-color;
  cursor: pointer;
  font-size: 1.6rem;
  line-height: 1.43;

  &.allblack {
    color: $body-black;
  }
}

button{
  cursor: pointer;
}

.width-boundaries {
  display: block;
  margin: 0 auto;
  max-width: $content-max-width;
  padding: 0 0 40px 0;
  width: 100%;
  @media screen and (min-width: $tablet-breakpoint) {
    margin: 0 0 0 auto;
  }
  @media screen and (min-width: $desktop-breakpoint) {
    margin: 0 auto;
  }
}

.width-boundaries.align-left {
  @media screen and (min-width: $desktop-breakpoint) {
    max-width: $content-max-width;
  }
}

/*
 * Structures for pages with content and buttons bottom-aligned (i.e. identity verification)
 *
 */

.page-with-button {
  align-content: stretch;
  align-items: stretch;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  min-height: 100%;
  justify-content: flex-start;
  padding-top: 2rem;
  max-width: $content-max-width;

  @media screen and (min-width: $tablet-breakpoint) {
    min-height: calc(100% - 12rem);
    margin-top: 10rem;
  }
  @media screen and (min-width: $desktop-breakpoint) {
    margin: 10rem auto 0 auto;
    display: block;
  }

}

.page-with-button--content {
  flex: 1 1 auto;
  position: relative;

  @media screen and (min-width: $desktop-breakpoint) {
    flex: none;
    min-height: 40vh;
  }
}

.page-with-button--buttons,
.page-with-button--button {
  display: block;
  flex: 0 0 82px;
  line-height: 52px;
  height: 82px;
  min-height: 52px;
  padding: 0;
  position: relative;
  margin: auto;
  width: 100%;

  @media screen and (min-width: $desktop-breakpoint) {
    padding: 0 (100% / $grid-col);
    flex: none;
    width: auto;
  }

  .page-with-button--button--boundaries {
    float: right;
    height: 52px;
    line-height: 52px;
    max-height: 52px;
    min-height: 52px;
    padding: 10px 20px;
    width: 100%;
    margin-left: auto;

    @media screen and (min-width: $tablet-breakpoint) {
      width: 50%;
      padding: 10px 35px 10px 20px;
    }
  }

  input[type="submit"],
  input[type="button"],
  input[type="reset"],
  button {
    display: block !important;
    float: right;
    margin: 0 !important;
    width: 50% ;
  }

  button.left {
    float: left;
  }
}

.page-with-button--buttons {

  .page-with-button--buttons--boundaries {
    display: flex;
    padding-bottom: 0;
    padding-top: 0;
    padding-right: 0;
    @media screen and (min-width: $tablet-breakpoint) {
      width: 50%;
      float: right;
      padding-right: 10px;
    }
    @media screen and (min-width: $desktop-breakpoint) {
      padding-right: 15px;
    }
  }
}

.page-with-button--buttons--button {
  flex: 0 0 50%;
  height: 52px;
  line-height: 52px;
  max-height: 52px;
  max-width: 50%;
  min-height: 52px;
  padding: 10px 20px;
  @media screen and (min-width: $desktop-breakpoint) {
    padding: 10px 15px;
  }

  input[type="submit"],
  input[type="button"],
  input[type="reset"],
  button {
    display: block !important;
    margin: 0 !important;
    width: 100% ;
  }
}

.row-margin-bottom {
  margin-bottom: 2.4rem;
}


/*
 * Structures for pages with content and buttons bottom-aligned (i.e. identity verification)
 *
 */


.page-centered {
  display: block;
  min-height: 100%;
  position: relative;
}

.page-centered--content {
  display: inline-block;
  height: auto;
  left: 50%;
  min-width: 300px;
  position: absolute;
  top: 50%;
  transform: translate3d(-50%, -50%, 0);
  width: auto;
}

.page-centered--button-container {
  text-align: center;
}

.blue-icon {
  color: #006192;
}

.centered-text {
  text-align: center;
}

.email-confirmation-container {
  padding-top: 8rem;
  text-align: center;
  @media screen and (min-width: $desktop-breakpoint) {
    padding-top: 15rem;
  }
}


/*
 * Error messages
 */

.context-error {
  background: red;
}


nx-message.context-error {
  background: #FFFFFF;
  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.12), 0px 0px 4px rgba(0, 0, 0, 0.12);
  border: none;
  border-radius: 4px;
}


/********************/


/*
 * ***** ***** ***** ***** *****
 * Definitions for tuxButtons
 * ***** ***** ***** ***** *****
 */

/* Primary */
$tux-primary-background: #006192;
$tux-primary-border: #006192;
$tux-primary-color: #fff;

$tux-primary-background-hover: #6ba4c1;
$tux-primary-border-hover: #6ba4c1;
$tux-primary-color-hover: #fff;

$tux-primary-background-disabled: #D6D1CB;
$tux-primary-border-disabled: $tux-primary-background-disabled;
$tux-primary-color-disabled: #fff;

/* Primary negative */
$tux-primary-background-negative: #fff;
$tux-primary-border-negative: #006192;
$tux-primary-color-negative: #006192;

$tux-primary-background-negative-hover: #fff;
$tux-primary-border-negative-hover: #006192;
$tux-primary-color-negative-hover: #006192;

$tux-primary-background-negative-disabled: #fff;
$tux-primary-border-negative-disabled: #D6D1CB;
$tux-primary-color-negative-disabled: #D6D1CB;

/* Secondary */
$tux-secondary-background: #fff;
$tux-secondary-border: #000;
$tux-secondary-color: #000;

$tux-secondary-background-hover: #D9D9D9;
$tux-secondary-border-hover: #000;
$tux-secondary-color-hover: #000;

$tux-secondary-background-disabled: #fff;
$tux-secondary-border-disabled: #000;
$tux-secondary-color-disabled: #000;


/* Secondary negative */
$tux-secondary-background-negative: #000;
$tux-secondary-border-negative: #000;
$tux-secondary-color-negative: #fff;

$tux-secondary-background-negative-hover: #000;
$tux-secondary-border-negative-hover: #000;
$tux-secondary-color-negative-hover: #fff;

$tux-secondary-background-negative-disabled: #000;
$tux-secondary-border-negative-disabled: #000;
$tux-secondary-color-negative-disabled: #fff;

/* Text */
$tux-text-background: transparent;
$tux-text-border: transparent;
$tux-text-color: $primary-color;

$tux-text-background-hover: transparent;
$tux-text-border-hover: transparent;
$tux-text-color-hover: $primary-color;

$tux-text-background-disabled: transparent;
$tux-text-border-disabled: transparent;
$tux-text-color-disabled: #D6D1CB;


.tux-button-secondary,
.tux-button-primary {
  background: $tux-primary-background;
  border: 2px solid $tux-primary-border;
  border-radius: 26px;
  color: $tux-primary-color;
  display: inline-block;
  font-size: 1.5rem;
  height: 48px;
  line-height: 44px;
  margin-right: 5px;
  min-width: 60px;
  padding: 0 35px;
  text-align: center;
  text-overflow: ellipsis;
  vertical-align: middle;
  white-space: nowrap;
  -webkit-appearance: none;

  &:focus {
    outline: 1px dotted #000;
  }

  &:active,
  &:hover {
    background: $tux-primary-background-hover;
    border-color: $tux-primary-border-hover;
    color: $tux-primary-color-hover;
    outline: none;
  }

  &[disabled] {
    background: $tux-primary-background-disabled;
    border-color: $tux-primary-border-disabled;
    color: $tux-primary-color-disabled;
    cursor: not-allowed;
    outline: none;
  }
}

.tux-button-primary.tux-button-negative {
  background: $tux-primary-background-negative;
  border-color: $tux-primary-border-negative;
  color: $tux-primary-color-negative;

  &:active,
  &:hover {
    background: $tux-primary-background-negative-hover;
    border-color: $tux-primary-border-negative-hover;
    color: $tux-primary-color-negative-hover;
  }

  &[disabled],
  &[disabled]:hover,
  &[disabled]:active {
    background: $tux-primary-background-negative-disabled;
    border-color: $tux-primary-border-negative-disabled;
    color: $tux-primary-color-negative-disabled;
  }
}

.tux-button-secondary {
  background: $tux-secondary-background;
  border-color: $tux-secondary-border;
  color: $tux-secondary-color;

  &:active,
  &:hover {
    background: $tux-secondary-background-hover;
    border-color: $tux-secondary-border-hover;
    color: $tux-secondary-color-hover;
  }

  &[disabled],
  &[disabled]:hover,
  &[disabled]:active {
    background: $tux-secondary-background-disabled;
    border-color: $tux-secondary-border-disabled;
    color: $tux-secondary-color-disabled;
  }
}


.tux-button-secondary.tux-button-negative {
  background: $tux-secondary-background-negative;
  border-color: $tux-secondary-border-negative;
  color: $tux-secondary-color-negative;

  &:active,
  &:hover {
    background: $tux-secondary-background-negative-hover;
    border-color: $tux-secondary-border-negative-hover;
    color: $tux-secondary-color-negative-hover;
  }

  &[disabled],
  &[disabled]:hover,
  &[disabled]:active {
    background: $tux-secondary-background-negative-disabled;
    border-color: $tux-secondary-border-negative-disabled;
    color: $tux-secondary-color-negative-disabled;
  }
}

.tux-button-small {
  border-radius: 22px;
  height: 40px;
  line-height: 16px;
  padding: 0 24px;
}

.tux-button-block {
  display: block;
  margin: 0;
  width: 100%;
}

.tux-button-text {
  background: $tux-text-background;
  border: none;
  color: $tux-text-color;
  display: inline-block;
  font-size: 1.5rem;
  height: auto;
  line-height: inherit;
  margin-bottom: 2rem;
  padding: 0;
  text-align: center;
  vertical-align: middle;
  -webkit-appearance: none;

  &:focus {
    outline: 1px dotted #000;
  }

  &:active,
  &:hover {
    background: $tux-text-background-hover;
    border-color: $tux-text-border-hover;
    color: $tux-text-color-hover;
    outline: none;
    text-decoration: underline;
  }

  &[disabled] {
    background: $tux-text-background-disabled;
    border-color: $tux-text-border-disabled;
    color: $tux-text-color-disabled;
    cursor: not-allowed;
    outline: none;
  }
}

.tux-button-block:only-child,
.tux-button-primary:only-child,
.tux-button-secondary:only-child,
.tux-button-text:only-child {
  margin-right: 0;
}
